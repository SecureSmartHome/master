/**
 * This class is generated by jOOQ
 */
package de.unipassau.isl.evs.ssh.master.database.generated.tables;


import de.unipassau.isl.evs.ssh.master.database.generated.DefaultSchema;
import de.unipassau.isl.evs.ssh.master.database.generated.Keys;
import de.unipassau.isl.evs.ssh.master.database.generated.tables.records.UserdeviceRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userdevice extends TableImpl<UserdeviceRecord> {

    private static final long serialVersionUID = 538032586;

    /**
     * The reference instance of <code>UserDevice</code>
     */
    public static final Userdevice USERDEVICE = new Userdevice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserdeviceRecord> getRecordType() {
        return UserdeviceRecord.class;
    }

    /**
     * The column <code>UserDevice._ID</code>.
     */
    public final TableField<UserdeviceRecord, Integer> _ID = createField("_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>UserDevice.name</code>.
     */
    public final TableField<UserdeviceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>UserDevice.fingerprint</code>.
     */
    public final TableField<UserdeviceRecord, String> FINGERPRINT = createField("fingerprint", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>UserDevice.GroupId</code>.
     */
    public final TableField<UserdeviceRecord, Integer> GROUPID = createField("GroupId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>UserDevice</code> table reference
     */
    public Userdevice() {
        this("UserDevice", null);
    }

    /**
     * Create an aliased <code>UserDevice</code> table reference
     */
    public Userdevice(String alias) {
        this(alias, USERDEVICE);
    }

    private Userdevice(String alias, Table<UserdeviceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userdevice(String alias, Table<UserdeviceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserdeviceRecord> getPrimaryKey() {
        return Keys.PK_USERDEVICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserdeviceRecord>> getKeys() {
        return Arrays.<UniqueKey<UserdeviceRecord>>asList(Keys.PK_USERDEVICE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserdeviceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserdeviceRecord, ?>>asList(Keys.FK_USERDEVICE_DEVICEGROUP_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userdevice as(String alias) {
        return new Userdevice(alias, this);
    }

    /**
     * Rename this table
     */
    public Userdevice rename(String name) {
        return new Userdevice(name, null);
    }
}
